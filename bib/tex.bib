%% This BibTeX bibliography file was created using BibDesk.
%% https://bibdesk.sourceforge.io/

%% Created for Alan at 2021-05-13 22:17:13 +0800


%% Saved with string encoding Unicode (UTF-8)


@article{evo-laws,
  author     = {M. M. {Lehman}},
  doi        = {10.1109/PROC.1980.11805},
  journal    = {Proceedings of the IEEE},
  number     = {9},
  pages      = {1060-1076},
  title      = {Programs, life cycles, and laws of software evolution},
  volume     = {68},
  year       = {1980},
  bdsk-url-1 = {https://doi.org/10.1109/PROC.1980.11805}
}

@article{tree-edit-p,
  author     = {Stanley M. Selkow},
  doi        = {https://doi.org/10.1016/0020-0190(77)90064-3},
  issn       = {0020-0190},
  journal    = {Information Processing Letters},
  keywords   = {Tree, tree correction, editing, algorithm},
  number     = {6},
  pages      = {184-186},
  title      = {The tree-to-tree editing problem},
  url        = {https://www.sciencedirect.com/science/article/pii/0020019077900643},
  volume     = {6},
  year       = {1977},
  bdsk-url-1 = {https://www.sciencedirect.com/science/article/pii/0020019077900643},
  bdsk-url-2 = {https://doi.org/10.1016/0020-0190(77)90064-3}
}

@article{tree-correction-p,
  address    = {New York, NY, USA},
  author     = {Tai, Kuo-Chung},
  doi        = {10.1145/322139.322143},
  issn       = {0004-5411},
  issue_date = {july 1979},
  journal    = {J. ACM},
  month      = jul,
  number     = {3},
  numpages   = {12},
  pages      = {422--433},
  publisher  = {Association for Computing Machinery},
  title      = {The Tree-to-Tree Correction Problem},
  url        = {https://doi.org/10.1145/322139.322143},
  volume     = {26},
  year       = {1979},
  bdsk-url-1 = {https://doi.org/10.1145/322139.322143}
}

@article{api-evo-refactoring,
  abstract   = {Frameworks and libraries change their APIs. Migrating an application to the new API is tedious and disrupts the development process. Although some tools and ideas have been proposed to solve the evolution of APIs, most updates are done manually. To better understand the requirements for migration tools, we studied the API changes of four frameworks and one library. We discovered that the changes that break existing applications are not random, but tend to fall into particular categories. Over 80% of these changes are refactorings. This suggests that refactoring-based migration tools should be used to update applications. Copyright {\copyright} 2006 John Wiley &amp; Sons, Ltd.},
  address    = {USA},
  author     = {Dig, Danny and Johnson, Ralph},
  issn       = {1532-060X},
  issue_date = {March 2006},
  journal    = {J. Softw. Maint. Evol.},
  keywords   = {frameworks, backwards compatibility, libraries, API evolution, component reuse, refactoring},
  month      = mar,
  number     = {2},
  numpages   = {25},
  pages      = {83--107},
  publisher  = {John Wiley &amp; Sons, Inc.},
  title      = {How Do APIs Evolve? A Story of Refactoring: Research Articles},
  volume     = {18},
  year       = {2006}
}

@inproceedings{DBLP:conf/wcre/ZhangZWTLX20,
  author     = {Zhaoxu Zhang and Hengcheng Zhu and Ming Wen and Yida Tao and Yepang Liu and Yingfei Xiong},
  bibsource  = {dblp computer science bibliography, https://dblp.org},
  biburl     = {https://dblp.org/rec/conf/wcre/ZhangZWTLX20.bib},
  booktitle  = {27th {IEEE} International Conference on Software Analysis, Evolution and Reengineering, {SANER} 2020, London, ON, Canada, February 18-21, 2020},
  doi        = {10.1109/SANER48275.2020.9054800},
  editor     = {Kostas Kontogiannis and Foutse Khomh and Alexander Chatzigeorgiou and Marios{-}Eleftherios Fokaefs and Minghui Zhou},
  pages      = {81--92},
  publisher  = {{IEEE}},
  timestamp  = {Tue, 02 Feb 2021 18:29:16 +0100},
  title      = {How Do Python Framework APIs Evolve? An Exploratory Study},
  url        = {https://doi.org/10.1109/SANER48275.2020.9054800},
  year       = {2020},
  bdsk-url-1 = {https://doi.org/10.1109/SANER48275.2020.9054800}
}

@inproceedings{DBLP:conf/kbse/FalleriMBMM14,
  author     = {Jean{-}R{\'{e}}my Falleri and Flor{\'{e}}al Morandat and Xavier Blanc and Matias Martinez and Martin Monperrus},
  booktitle  = {{ACM/IEEE} International Conference on Automated Software Engineering, {ASE} '14, Vasteras, Sweden - September 15 - 19, 2014},
  doi        = {10.1145/2642937.2642982},
  pages      = {313--324},
  title      = {Fine-grained and accurate source code differencing},
  url        = {http://doi.acm.org/10.1145/2642937.2642982},
  year       = {2014},
  bdsk-url-1 = {http://doi.acm.org/10.1145/2642937.2642982},
  bdsk-url-2 = {https://doi.org/10.1145/2642937.2642982}
}
